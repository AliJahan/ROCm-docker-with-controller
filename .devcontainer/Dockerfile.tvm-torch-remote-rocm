FROM remote-rocm-ubuntu:latest 
LABEL maintainer=ajaha004@ucr.edu

ARG TVM_UNITY_TAG=v0.12.dev0
ENV DEBIAN_FRONTEND=noninteractive
RUN apt-get -qq update && apt-get -qq install -y liblzma-dev libtinfo-dev zlib1g-dev libedit-dev libxml2-dev git

# most up-to-date cmake 
RUN apt-get -qq update && apt-get -qq install -y software-properties-common git pkg-config xxd libzmq3-dev python3 python3-pip
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
RUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
RUN apt-get update && apt-get install -y cmake curl

RUN echo "Installing vulkan sdk" \
    && wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | apt-key add - \
    && wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.3.268-focal.list https://packages.lunarg.com/vulkan/1.3.268/lunarg-vulkan-1.3.268-focal.list \
    && apt-get update && apt-get install -y vulkan-sdk

RUN echo "Building/Installing Torch..." \
  && pip install ninja mkl mkl-include \
  && cd /opt \
  && git clone --recursive --jobs `nproc` https://github.com/pytorch/pytorch.git \
  && cd pytorch \
  && git checkout v2.1.1 \
  && git submodule update --init --recursive --jobs `nproc` \
  && pip install -r requirements.txt \
  && python3 tools/amd_build/build_amd.py \
  && _GLIBCXX_USE_CXX11_ABI=1 HIP_ROOT_DIR=/opt/rocm/hip/ REL_WITH_DEB_INFO=1 MAX_JOBS=60 USE_CUDA=0 USE_NUMPY=1 PYTORCH_ROCM_ARCH="gfx906" MIOPEN_LIBRARY=/opt/rocm/miopen MIOPEN_LIB_DIR=/opt/rocm/miopen/lib MIOPEN_INCLUDE_DIR=/opt/rocm/miopen/include USE_CUDA=0 USE_ROCM=1 ROCM_HOME=/opt/rocm python3 setup.py -q install develop &> build.log \
  && python3 -c "import torch;"

ENV Torch_DIR=/opt/pytorch
# Build tvm-unity from https://llm.mlc.ai/docs/install/tvm.html#option-2-build-from-source
RUN echo "Building TVM-Unity from source..." \
    && git clone --recursive --jobs `nproc` https://github.com/mlc-ai/relax.git tvm-unity && cd tvm-unity \
    && git checkout 95f1b5c0e8004c3650430d90a01e047770bb74a7 \
    && git submodule update --recursive --init --jobs `nproc`\
    && rm -rf build && mkdir build && cd build \
    && cp ../cmake/config.cmake . \
    && echo "set(CMAKE_BUILD_TYPE RelWithDebInfo)" >> config.cmake \
    && echo "set(USE_VULKAN ON)" >> config.cmake \
    && echo "set(USE_ROCM /opt/rocm/)" >> config.cmake \
    && echo "set(USE_OPENCL ON)" >> config.cmake \
    && echo "set(USE_RCCL /opt/rocm/rccl)" >> config.cmake \
    && echo "set(USE_LLVM \"/opt/rocm/llvm/bin/llvm-config --ignore-libllvm --link-static\")" >> config.cmake \
    && echo "set(USE_OPENMP ON)" >> config.cmake \
    && echo "set(HIDE_PRIVATE_SYMBOLS ON)" >> config.cmake \
    && echo "set(USE_MIOPEN /opt/rocm/miopen/)" >> config.cmake \
    && echo "set(USE_ROCBLAS /opt/rocm/rocblas/)" >> config.cmake \
    && echo "set(USE_MLIR ON)" >> config.cmake \
    && echo "set(SUMMARIZE ON)" >> config.cmake \
    && echo "set(BACKTRACE_ON_SEGFAULT ON)" >> config.cmake \
    && cmake .. && cmake --build . --parallel `nproc` \
    && cd ../python && pip install -e . \
    && python3 -c "import tvm; print(tvm.__file__)" \
    && python3 -c "import tvm; print(tvm._ffi.base._LIB)" \
    && python3 -c "import tvm; print('\n'.join(f'{k}: {v}' for k, v in tvm.support.libinfo().items()))" \
    && python3 -c "import tvm; print(tvm.rocm().exist)" \
    && echo "TVM-Unity installed successfuly"
# && echo "set(USE_LIBTORCH /opt/pytorch/)" >> config.cmake \
ENV TVM_HOME=/tvm-unity/

RUN echo "Installing Cargo(rust)..." \
    && curl https://sh.rustup.rs -o rust_install.sh \
    && chmod +x rust_install.sh \
    && ./rust_install.sh -y \
    && echo "Cargo installed!"
ENV PATH="/root/.cargo/bin:${PATH}"

RUN echo "Building MLC-LLM from source..." \ 
    && git clone https://github.com/mlc-ai/mlc-llm.git --recursive --jobs `nproc` \
    && cd mlc-llm \
    && git checkout 26d348aa72431d009f27150438097a90ee940ec7 \
    && git submodule update --recursive --init --jobs `nproc` \
    && rm -rf build && mkdir build && cd build \
    && echo "set(TVM_HOME /tvm-unity/)"  >> config.cmake \
    && echo "set(CMAKE_BUILD_TYPE RelWithDebInfo)" >> config.cmake \
    && echo "set(USE_CUDA OFF)" >> config.cmake \
    && echo "set(USE_CUTLASS OFF)" >> config.cmake \
    && echo "set(USE_CUBLAS OFF)" >> config.cmake \
    && echo "set(USE_ROCM ON)" >> config.cmake \
    && echo "set(USE_VULKAN ON)" >> config.cmake \
    && echo "set(USE_METAL OFF)" >> config.cmake \
    && echo "set(USE_OPENCL ON)" >> config.cmake \
    && echo "config: " && cat config.cmake \
    && cmake .. && cmake --build . --parallel `nproc` \
    && cd ../python && python3 -m pip install -e . \
    && echo "MLC-llm installed successfuly"

RUN apt-get -qq install -y git-lfs
ENV PATH=/opt/rocm/llvm/bin/:$PATH
